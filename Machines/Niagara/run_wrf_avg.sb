#!/bin/bash

# ==== SLURM submission script for SciNet Niagara ====
#SBATCH --nodes=1
#SBATCH --ntasks-per-node=40
#SBATCH --time=1:00:00
#SBATCH --output=cycling_avg.%j.out
#SBATCH --mail-user="$EMAIL"
#SBATCH --mail-type=END,FAIL
#SBATCH -J cycling_avg


# Display some info: hostname, uname and JOBNAME
echo
echo "   ================================== Preliminary Info ==================================   "
echo
echo -n "   hostname: "
hostname
echo -n "   uname: "
uname
echo
echo -n "   "
date
echo


# General settings
INIDIR="${SLURM_SUBMIT_DIR}"
SCRIPTDIR="${INIDIR}/scripts/" # Default location of averaging script.
AVGSCRIPT='run_wrf_avg.sb' # Name of this script.
PYAVG='wrfout_average.py' # Name of Python averaging script.
DOMAINS='1234' # String of single-digit domain indices.


# Fix some legacy stuff ?????
# NOTE: This should only be necessary for old data from HPSS.
ADDVAR=${ADDVAR:-"FALSE"}
ADDVARIABLE="addVariable.sh" # A NCKS script.


# Load machine setup
export RUNPYWPS=1 
export PYTHONVERSION=3 # wrfavg is now converted to Python 3.
source "$SCRIPTDIR/setup_WPS.sh"


# Return to original working directory
cd "${INIDIR}"


# Influential enviromentvariables for averaging script
export PYAVG_THREADS=${PYAVG_THREADS:-"$SLURM_NTASKS"}
export PYAVG_DOMAINS=${PYAVG_DOMAINS:-"$DOMAINS"}
export PYAVG_FILETYPES=${PYAVG_FILETYPES:-''} 
export PYAVG_DAILY=${PYAVG_DAILY:-'TRUE'} # Usually only monthly. ?????
export PYAVG_SMPLDIFF=${PYAVG_SMPLDIFF:-'FALSE'} # Usually use centered diff. ?????


# Options that would interfere with yearly updates ?????
export PYAVG_OVERWRITE=${PYAVG_OVERWRITE:-'FALSE'}
export PYAVG_ADDNEW=${PYAVG_ADDNEW:-'FALSE'} 
export PYAVG_RECOVER=${PYAVG_RECOVER:-'FALSE'}
export PYAVG_DEBUG=${PYAVG_DEBUG:-'FALSE'} # Add more debug output.


# Shuffle variables ?????
echo
if [[ "${ADDVAR}" == 'ADDVAR' ]]; then  
  for VAR in 'ACSNOW' 'SNOWNC' 'SR' 'T2MEAN' 'TSLB' 'PBLH'; do # Make sure, certain variables are there.
    echo
    echo "   Moving variable '${VAR}' (in wrfout folder)."
    "${SCRIPTDIR}/${ADDVARIABLE}" "${VAR}" # Launch NCKS script for all variables.
    echo
  done
fi
echo


# Launch averaging script (Python)
echo
if [[ -n "${PERIOD}" ]]; then
  time -p python "${SCRIPTDIR}/${PYAVG}" "${PERIOD}"
  ERR=$? # Capture exit code.      
else
  time -p python "${SCRIPTDIR}/${PYAVG}"
  ERR=$? # Capture exit code.
fi
echo


# Exit with exit code from python script
exit ${ERR}










